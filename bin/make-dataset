#!/usr/bin/env python
#
# make-dataset
#
# Make a dataset file from set of paths
#

import sys
import glob
import json
from pathlib import Path


def arg_parser():
    from argparse import ArgumentParser
    parser = ArgumentParser()
    parser.add_argument("patterns", nargs='+', help="Pattern of files")
    parser.add_argument("--out", default=None, help="Destination file")
    parser.add_argument("--name", help="Analysis Name")
    parser.add_argument("--ignore", action="store_true", help="Ignore missing files")
    return parser


def main(argv=None):
    if argv is None:
        argv = sys.argv[1:]
    args = arg_parser().parse_args(argv)


    files = []

    for pattern in args.patterns:
        for path in map(Path, glob.iglob(pattern, recursive=True)):
            if not path.exists():
                if args.ignore:
                    print("Could not find file %s, ignoring" % path)
                    continue
                else:
                    print("Could not find file %s, aborting" % path)
                    return
            print(">>", path)
            files.append(path)



if __name__ == "__main__":
    main()
